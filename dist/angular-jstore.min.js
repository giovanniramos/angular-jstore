/*!
 * Angular jStore [v1.1.5]
 * https://github.com/giovanniramos/angular-jstore

 * Copyright (c) 2016-2019, Giovanni Ramos
 * Licensed under the MIT license:
 *   http://opensource.org/licenses/MIT
 */
!function(e,t){'use strict';'function'==typeof define&&define.amd?define(['angular'],t):'object'==typeof exports?(t('undefined'==typeof angular?require('angular'):angular),module.exports='angular-jstore'):t(e.angular)}(this,function(l){'use strict';var e=l.module('angular-jstore',[]);return e.provider('$jstore',function(){var f='jStoreApp-',r=[],n=!1,a=!1;this.setPrefix=function(e){if('string'!=typeof e)throw new TypeError('$jstoreProvider.setPrefix() expects a String.');return f=e,this},this.setDebug=function(e){if('boolean'!=typeof e)throw new TypeError('$jstoreProvider.setDebug() expects a Boolean.');return n=e,this},this.setTabStatus=function(e){if('boolean'!=typeof e)throw new TypeError('$jstoreProvider.setTabStatus() expects a Boolean.');return a=e,this},this.$get=[function(){function c(e){return e.replace(new RegExp('('+f+'){2,}','g'),f)}function o(t){l.forEach(r,function(e){e[0]===t.newValue&&(n&&window.console.log(' fire >>',e[0]),a&&(top.document.title=top.document.title.replace(/\(inactive\)/,'')+' (inactive)'),e[1](t))})}return{isSupported:'undefined'!=typeof Storage,set:function(e,t){if('string'!=typeof e)throw new TypeError('$jstore.set() expects a String but got a `'+typeof e+'` as a first parameter.');if('string'==typeof t)throw new TypeError('$jstore.set() expects a JSON object instead of a string as a second parameter.');if('object'!=typeof t)throw new TypeError('$jstore.set() expects a JSON object as the second argument.');var o=f+e,r=this.get(o);return localStorage.setItem(o,l.toJson(null===r?t:l.merge(r,t)))},get:function(e){if('string'!=typeof e)throw new TypeError('$jstore.get() expects a String.');var t=c(f+e),o=localStorage.getItem(t);return null!==o?l.fromJson(o):null},del:function(e){if('string'!=typeof e)throw new TypeError('$jstore.del() expects a String.');var t=c(f+e),o=this.get(t);if(null!==o){var r=arguments;if(r.length)for(var n=r.length,a=1;a<n;a+=1)delete o[r[a]];localStorage.setItem(t,l.toJson(o))}},omit:function(e){if('string'!=typeof e)throw new TypeError('$jstore.omit() expects a String.');var t=c(f+e),o=this.get(t);if(null!==o){var r={},n=arguments;if(n.length)for(var a=n.length,i=1;i<a;i+=1)for(var s in o)o.hasOwnProperty(s)&&s===n[i]&&(r[s]=o[s]);localStorage.setItem(t,l.toJson(r))}},has:function(e){if('string'!=typeof e)throw new TypeError('$jstore.has() expects a String.');return null!==this.get(e)},count:function(){for(var e=0,t=localStorage,o=t.length,r=0;r<o;r+=1)0===t.key(r).indexOf(f)&&(e+=1);return e},each:function(e){if('function'!=typeof e)throw new TypeError('$jstore.each() expects a Function with callback.');for(var t=localStorage,o=t.length,r=0;r<o;r+=1){var n=localStorage.key(r);0===t.key(r).indexOf(f)&&e(n,this.get(n))}},fire:function(e){if('object'!=typeof e)throw new TypeError('$jstore.fire() expects a Object has obtained a `'+typeof e+'` as a parameter. Try something like: { command: "reload" }');e.command&&(n&&window.console.log('fired >>',e.command),a&&(top.document.title=top.document.title.replace(/\(inactive\)/,'')),localStorage.setItem('cmd',e.command),localStorage.removeItem('cmd'))},watch:function(e,t){if('string'!=typeof e)throw new TypeError('$jstore.watch() expects a String but got a `'+typeof e+'` as a first parameter.');if('function'!=typeof t)throw new TypeError('$jstore.watch() expects a Callback Function with a second argument.');n&&window.console.log('watch >>',e),r.push([e,t]),window.addEventListener?window.addEventListener('storage',o,!1):window.attachEvent&&window.attachEvent('onstorage',o)},check:function(t){if('string'!=typeof t)throw new TypeError('$jstore.check() expects a String but got a `'+typeof t+'` as a parameter.');n&&window.console.log('check >>',t);var o=!1;return r.filter(function(e){e[0]===t&&(o=!0)}),o},close:function(t){if('string'!=typeof t)throw new TypeError('$jstore.close() expects a String but got a `'+typeof t+'` as a parameter.');n&&window.console.log('close >>',t),r=r.filter(function(e){return e[0]!==t})},remove:function(e){if('string'==typeof e){var t=c(f+e);localStorage.removeItem(t)}else localStorage.clear()},clear:function(){throw new TypeError('Use $jstore.remove() to delete all sessions created in localStorage.')}}}]}),e});